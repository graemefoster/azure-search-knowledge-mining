{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string",
            "metadata": {
                "description": "provide a 2-13 character prefix for all resources."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "hostingPlanSku": {
            "type": "string",
            "defaultValue": "P1V3",
            "allowedValues": [
                "P1v3"
            ],
            "metadata": {
                "description": "The pricing tier for the App Service plan"
            }
        },
        "searchServiceSku": {
            "type": "string",
            "defaultValue": "basic",
            "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3"
            ],
            "metadata": {
                "description": "The SKU of the search service you want to create. E.g. free or standard"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "South Central US",
            "allowedValues": [
                "East Asia",
                "Southeast Asia",
                "Australia East",
                "Brazil South",
                "Canada Central",
                "North Europe",
                "West Europe",
                "Central India",
                "UK South",
                "East US",
                "East US 2",
                "Central US",
                "North Central US",
                "South Central US",
                "West Central US",
                "West US",
                "West US 2",
                "Japan East",
                "Japan West",
                "Korea Central",
                "France Central"
            ],
            "metadata": {
                "description": "Location where the Azure Search service and Cognitive Services account will be deployed."
            }
        },
        "vnetId": {
            "type": "string",
            "metadata": {
                "description": "Resource Id of the VNet to deploy into."
            }
        },
        "plinkSubnetId": {
            "type": "string",
            "metadata": {
                "description": "Resource Id of the private link subnet to deploy into."
            }
        },
        "vnetIntregrationSubnetId": {
            "type": "string",
            "metadata": {
                "description": "Resource Id of the subnet the app-service-plan should send its traffic out by."
            }
        }
    },
    "variables": {
        "hostingPlanName": "[concat(parameters('resourcePrefix'), '-plan')]",
        "storageAccountName": "[concat(parameters('resourcePrefix'), 'str')]",
        "websiteName": "[concat(parameters('resourcePrefix'), '-site')]",
        "websitePrivateEndpointName": "[concat(parameters('resourcePrefix'), '-site-private-endpoint')]",
        "storagePrivateEndpointName": "[concat(parameters('resourcePrefix'), '-storage-private-endpoint')]",
        "searchPrivateEndpointName": "[concat(parameters('resourcePrefix'), '-search-private-endpoint')]",
        "appInsightsName": "[concat(parameters('resourcePrefix'), '-app-insights')]",
        "searchServiceName": "[concat(parameters('resourcePrefix'), '-search-service')]",
        "cognitiveServicesAccountName": "[concat(parameters('resourcePrefix'), '-cognitive-services')]",
        "websitePrivateDnsZoneName": "privatelink.azurewebsites.net",
        "storagePrivateDnsZoneName": "privatelink.blob.core.windows.net",
        "searchPrivateDnsZoneName": "privatelink.search.windows.net"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('hostingPlanSku')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]"
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "Standard"
            },
            "properties" : {
                "allowBlobPublicAccess" : false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2019-04-01",
            "name": "[variables('storagePrivateEndpointName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[parameters('plinkSubnetId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat('privatelinkconnection', variables('storageAccountName'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('storagePrivateDnsZoneName')]",
            "location": "global",
            "tags": {},
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('storagePrivateDnsZoneName'), '/knowledge-mining-portal-vnet-link')]",
            "location": "global",
            "dependsOn": [
                "[variables('storagePrivateDnsZoneName')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[parameters('vnetId')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "apiVersion": "2020-12-01",
            "name": "[variables('websiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],
            "properties": {
                "serverFarmId": "[variables('hostingPlanName')]"
            },
            "resources": [
                {
                    "type": "networkConfig",
                    "apiVersion": "2019-08-01",
                    "name": "virtualNetwork",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('websiteName'))]"
                    ],
                    "properties": {
                        "subnetResourceId": "[parameters('vnetIntregrationSubnetId')]",
                        "isSwift": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2019-04-01",
            "name": "[variables('websitePrivateEndpointName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('websiteName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[parameters('plinkSubnetId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat('privatelinkconnection', variables('websiteName'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', variables('websiteName'))]",
                            "groupIds": [
                                "sites"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-01-01",
            "name": "[variables('websitePrivateDnsZoneName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('websiteName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-01-01",
            "name": "[concat(variables('websitePrivateDnsZoneName'), '/knowledge-mining-portal-vnet-link')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('websitePrivateDnsZoneName'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[parameters('vnetId')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('websitePrivateEndpointName'),'/dnsgroupname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('websitePrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('websitePrivateEndpointName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "dnsConfig",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('websitePrivateDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('storagePrivateEndpointName'),'/dnsgroupname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('storagePrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "dnsConfig",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('storagePrivateDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightsName')]",
            "location": "[parameters('location')]",
            "tags": {
                "applicationType": "web",
                "applicationName": "[variables('websiteName')]"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "apiVersion": "2021-04-01-preview",
            "name": "[variables('searchServiceName')]",
            "type": "Microsoft.Search/searchServices",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('searchServiceSku')]"
            },
            "properties": {
                "publicNetworkAccess": "disabled"
            },
            "resources": [
                {
                    "name": "indexer-blob-access",
                    "type": "sharedPrivateLinkResources",
                    "dependsOn": [
                        "[variables('searchServiceName')]",
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointName'))]"
                    ],
                    "apiVersion": "2020-08-01",
                    "properties": {
                        "privateLinkResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "groupId": "blob",
                        "requestMessage": "Access to blob storage from search indexer"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2019-04-01",
            "name": "[variables('searchPrivateEndpointName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[parameters('plinkSubnetId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat('privatelinkconnection', variables('searchServiceName'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]",
                            "groupIds": [
                                "searchService"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-01-01",
            "name": "[concat(variables('searchPrivateDnsZoneName'), '/search-vnet-link')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('searchPrivateDnsZoneName'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[parameters('vnetId')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-01-01",
            "name": "[variables('searchPrivateDnsZoneName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(variables('searchPrivateEndpointName'),'/dnsgroupname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('searchPrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('searchPrivateEndpointName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "dnsConfig",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('searchPrivateDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('cognitiveServicesAccountName')]",
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "sku": {
                "name": "S0"
            },
            "kind": "CognitiveServices",
            "location": "[toLower(replace(parameters('location'),' ', ''))]",
            "properties": {
            }
        }
    ]
}